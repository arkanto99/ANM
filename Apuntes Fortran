DECLARACION DE ARRAYS

-Por defecto, fortran comienza los índices en 1: real,dimension::a(10,15).
Sin embargo, se puede forzar a que empiece en el índice x: real,dimension::a(x:10,x:15). Puede ser muy util para forzar que se comience e 0

-Rango: numero de dimensiones del array. El rango maximo permitido por fortran es 7

-Extension de la dimension x de un array: numero de elementos de la dimension x

-Tamaño: numero de elementos del array, es el producto de las extensiones del array

-Subarray: array que contiene un subconjunto de elementos de un array. Teniendo un array v(100), podemos tomar v(:50), que contiene las primeras 50 componentes de v, o v(50:), las 50 ultimas.Teniendo c(50,50), podemos poner c(1:5,20), que contiene todos los elementos de la columna 20 que se encuentren en las filas de la 1 a la 5, c(1:50,j), que devolveria la columna j-esima de c

-Teniendo v(100), si inicializamos v=5, todas las componentes de v se ponen a 5

-Podemos sumar vectores directamente si son compatibles(tienen las mismas dimensiones), o utilizar subarrays para lograr vectores compatibles de otros que no lo sean. Tambien podemos hacer p=a*b, donde * multiplicar a(i,j)*b(i,j), por lo tanto no es ni el producto escalar ni el producto matricial. Para el producto de matrices (que existe una funcion que ya lo realiza, matmul), se podria escribir tambien como
p(i,j)=dot_product(a(i,:),b(:,j)), donde dot_product es una funcion intrinseca de fortran que calcula el producto escalar.


